import { Component, Input, ViewEncapsulation } from '@angular/core';
import { ReactiveFormsModule, Validators } from "@angular/forms";
import { CommonModule } from "@angular/common";
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/common";
export class FormComponent {
    fb;
    sections = [];
    form;
    constructor(fb) {
        this.fb = fb;
    }
    ngOnInit() {
        this.createForm(this.sections);
    }
    createForm(sections) {
        const formControls = {};
        sections.forEach((section) => {
            section.fields.forEach((field) => {
                const validators = [];
                if (field.validation.required)
                    validators.push(Validators.required);
                if (field.validation.email)
                    validators.push(Validators.email);
                formControls[field.name] = ['', validators];
            });
        });
        this.form = this.fb.group(formControls);
    }
    getSectionClass(layout) {
        switch (layout) {
            case '2x2':
                return 'grid-2x2';
            case '2x3':
                return 'grid-2x3';
            case '3x3':
                return 'grid-3x3';
            default:
                return '';
        }
    }
    getFieldClass(layout) {
        return layout === '2x2' || layout === '2x3' || layout === '3x3' ? 'field' : '';
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.5", ngImport: i0, type: FormComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.5", type: FormComponent, isStandalone: true, selector: "lib-form", inputs: { sections: "sections" }, ngImport: i0, template: "<form [formGroup]=\"form\" class=\"p-6 space-y-6\">\n  <div *ngFor=\"let section of sections\" class=\"space-y-4 border-2 rounded-md p-2\">\n    <div class=\"rounded-md pl-2 py-1.5 bg-gray-200\">\n      <h2 class=\"text-lg font-semibold\">{{ section.name }}</h2>\n    </div>\n    <div [ngClass]=\"getSectionClass(section.layout)\" class=\"grid gap-4\">\n      <div *ngFor=\"let field of section.fields\" [ngClass]=\"getFieldClass(section.layout)\">\n        <label class=\"block text-sm font-medium text-gray-700\">{{ field.label }}</label>\n        <input\n          [type]=\"field.type\"\n          [formControlName]=\"field.name\"\n          [attr.placeholder]=\"field.label\"\n          class=\"w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n        />\n        <div *ngIf=\"form.get(field.name)?.invalid && form.get(field.name)?.touched\" class=\"text-sm text-red-500\">\n          <small *ngIf=\"form.get(field.name)?.errors?.['required']\">This field is required.</small>\n          <small *ngIf=\"form.get(field.name)?.errors?.['email']\">Invalid email address.</small>\n        </div>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" [disabled]=\"form.invalid\" class=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 disabled:opacity-50\">Submit</button>\n</form>\n", styles: [".grid-2x2{display:grid;grid-template-columns:repeat(2,1fr);gap:16px}.grid-2x3,.grid-3x3{display:grid;grid-template-columns:repeat(3,1fr);gap:16px}.field{display:flex;flex-direction:column}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }], encapsulation: i0.ViewEncapsulation.None });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.5", ngImport: i0, type: FormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-form', standalone: true, imports: [
                        CommonModule,
                        ReactiveFormsModule,
                    ], encapsulation: ViewEncapsulation.None, template: "<form [formGroup]=\"form\" class=\"p-6 space-y-6\">\n  <div *ngFor=\"let section of sections\" class=\"space-y-4 border-2 rounded-md p-2\">\n    <div class=\"rounded-md pl-2 py-1.5 bg-gray-200\">\n      <h2 class=\"text-lg font-semibold\">{{ section.name }}</h2>\n    </div>\n    <div [ngClass]=\"getSectionClass(section.layout)\" class=\"grid gap-4\">\n      <div *ngFor=\"let field of section.fields\" [ngClass]=\"getFieldClass(section.layout)\">\n        <label class=\"block text-sm font-medium text-gray-700\">{{ field.label }}</label>\n        <input\n          [type]=\"field.type\"\n          [formControlName]=\"field.name\"\n          [attr.placeholder]=\"field.label\"\n          class=\"w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n        />\n        <div *ngIf=\"form.get(field.name)?.invalid && form.get(field.name)?.touched\" class=\"text-sm text-red-500\">\n          <small *ngIf=\"form.get(field.name)?.errors?.['required']\">This field is required.</small>\n          <small *ngIf=\"form.get(field.name)?.errors?.['email']\">Invalid email address.</small>\n        </div>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" [disabled]=\"form.invalid\" class=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 disabled:opacity-50\">Submit</button>\n</form>\n", styles: [".grid-2x2{display:grid;grid-template-columns:repeat(2,1fr);gap:16px}.grid-2x3,.grid-3x3{display:grid;grid-template-columns:repeat(3,1fr);gap:16px}.field{display:flex;flex-direction:column}\n"] }]
        }], ctorParameters: () => [{ type: i1.FormBuilder }], propDecorators: { sections: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9teS1mb3JtLWxpYi9zcmMvbGliL2Zvcm0vZm9ybS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9teS1mb3JtLWxpYi9zcmMvbGliL2Zvcm0vZm9ybS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBVSxpQkFBaUIsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMxRSxPQUFPLEVBQXlCLG1CQUFtQixFQUFFLFVBQVUsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3ZGLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQzs7OztBQWE3QyxNQUFNLE9BQU8sYUFBYTtJQU1kO0lBTEQsUUFBUSxHQUFTLEVBQUUsQ0FBQztJQUU3QixJQUFJLENBQWE7SUFFakIsWUFDVSxFQUFlO1FBQWYsT0FBRSxHQUFGLEVBQUUsQ0FBYTtJQUN0QixDQUFDO0lBRUosUUFBUTtRQUNOLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCxVQUFVLENBQUMsUUFBZTtRQUN4QixNQUFNLFlBQVksR0FBUSxFQUFFLENBQUM7UUFDN0IsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQzNCLE9BQU8sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBVSxFQUFFLEVBQUU7Z0JBQ3BDLE1BQU0sVUFBVSxHQUFHLEVBQUUsQ0FBQztnQkFDdEIsSUFBSSxLQUFLLENBQUMsVUFBVSxDQUFDLFFBQVE7b0JBQUUsVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQ3BFLElBQUksS0FBSyxDQUFDLFVBQVUsQ0FBQyxLQUFLO29CQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUM5RCxZQUFZLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1lBQzlDLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxlQUFlLENBQUMsTUFBYztRQUM1QixRQUFRLE1BQU0sRUFBRSxDQUFDO1lBQ2YsS0FBSyxLQUFLO2dCQUNSLE9BQU8sVUFBVSxDQUFDO1lBQ3BCLEtBQUssS0FBSztnQkFDUixPQUFPLFVBQVUsQ0FBQztZQUNwQixLQUFLLEtBQUs7Z0JBQ1IsT0FBTyxVQUFVLENBQUM7WUFDcEI7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7UUFDZCxDQUFDO0lBQ0gsQ0FBQztJQUVELGFBQWEsQ0FBQyxNQUFjO1FBQzFCLE9BQU8sTUFBTSxLQUFLLEtBQUssSUFBSSxNQUFNLEtBQUssS0FBSyxJQUFJLE1BQU0sS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ2pGLENBQUM7dUdBekNVLGFBQWE7MkZBQWIsYUFBYSxzR0NmMUIsNDNDQXVCQSx1UERmSSxZQUFZLDZWQUNaLG1CQUFtQjs7MkZBTVYsYUFBYTtrQkFYekIsU0FBUzsrQkFDRSxVQUFVLGNBQ1IsSUFBSSxXQUNQO3dCQUNQLFlBQVk7d0JBQ1osbUJBQW1CO3FCQUNwQixpQkFHYyxpQkFBaUIsQ0FBQyxJQUFJO2dGQUc1QixRQUFRO3NCQUFoQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPbkluaXQsIFZpZXdFbmNhcHN1bGF0aW9ufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Rm9ybUJ1aWxkZXIsIEZvcm1Hcm91cCwgUmVhY3RpdmVGb3Jtc01vZHVsZSwgVmFsaWRhdG9yc30gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdsaWItZm9ybScsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgXSxcbiAgdGVtcGxhdGVVcmw6ICcuL2Zvcm0uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybDogJy4vZm9ybS5jb21wb25lbnQuY3NzJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBGb3JtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0e1xuICBASW5wdXQoKSBzZWN0aW9uczphbnlbXSA9IFtdO1xuXG4gIGZvcm0hOiBGb3JtR3JvdXA7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBmYjogRm9ybUJ1aWxkZXIsXG4gICkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmNyZWF0ZUZvcm0odGhpcy5zZWN0aW9ucyk7XG4gIH1cblxuICBjcmVhdGVGb3JtKHNlY3Rpb25zOiBhbnlbXSkge1xuICAgIGNvbnN0IGZvcm1Db250cm9sczogYW55ID0ge307XG4gICAgc2VjdGlvbnMuZm9yRWFjaCgoc2VjdGlvbikgPT4ge1xuICAgICAgc2VjdGlvbi5maWVsZHMuZm9yRWFjaCgoZmllbGQ6IGFueSkgPT4ge1xuICAgICAgICBjb25zdCB2YWxpZGF0b3JzID0gW107XG4gICAgICAgIGlmIChmaWVsZC52YWxpZGF0aW9uLnJlcXVpcmVkKSB2YWxpZGF0b3JzLnB1c2goVmFsaWRhdG9ycy5yZXF1aXJlZCk7XG4gICAgICAgIGlmIChmaWVsZC52YWxpZGF0aW9uLmVtYWlsKSB2YWxpZGF0b3JzLnB1c2goVmFsaWRhdG9ycy5lbWFpbCk7XG4gICAgICAgIGZvcm1Db250cm9sc1tmaWVsZC5uYW1lXSA9IFsnJywgdmFsaWRhdG9yc107XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICB0aGlzLmZvcm0gPSB0aGlzLmZiLmdyb3VwKGZvcm1Db250cm9scyk7XG4gIH1cblxuICBnZXRTZWN0aW9uQ2xhc3MobGF5b3V0OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHN3aXRjaCAobGF5b3V0KSB7XG4gICAgICBjYXNlICcyeDInOlxuICAgICAgICByZXR1cm4gJ2dyaWQtMngyJztcbiAgICAgIGNhc2UgJzJ4Myc6XG4gICAgICAgIHJldHVybiAnZ3JpZC0yeDMnO1xuICAgICAgY2FzZSAnM3gzJzpcbiAgICAgICAgcmV0dXJuICdncmlkLTN4Myc7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICB9XG5cbiAgZ2V0RmllbGRDbGFzcyhsYXlvdXQ6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGxheW91dCA9PT0gJzJ4MicgfHwgbGF5b3V0ID09PSAnMngzJyB8fCBsYXlvdXQgPT09ICczeDMnID8gJ2ZpZWxkJyA6ICcnO1xuICB9XG59XG4iLCI8Zm9ybSBbZm9ybUdyb3VwXT1cImZvcm1cIiBjbGFzcz1cInAtNiBzcGFjZS15LTZcIj5cbiAgPGRpdiAqbmdGb3I9XCJsZXQgc2VjdGlvbiBvZiBzZWN0aW9uc1wiIGNsYXNzPVwic3BhY2UteS00IGJvcmRlci0yIHJvdW5kZWQtbWQgcC0yXCI+XG4gICAgPGRpdiBjbGFzcz1cInJvdW5kZWQtbWQgcGwtMiBweS0xLjUgYmctZ3JheS0yMDBcIj5cbiAgICAgIDxoMiBjbGFzcz1cInRleHQtbGcgZm9udC1zZW1pYm9sZFwiPnt7IHNlY3Rpb24ubmFtZSB9fTwvaDI+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBbbmdDbGFzc109XCJnZXRTZWN0aW9uQ2xhc3Moc2VjdGlvbi5sYXlvdXQpXCIgY2xhc3M9XCJncmlkIGdhcC00XCI+XG4gICAgICA8ZGl2ICpuZ0Zvcj1cImxldCBmaWVsZCBvZiBzZWN0aW9uLmZpZWxkc1wiIFtuZ0NsYXNzXT1cImdldEZpZWxkQ2xhc3Moc2VjdGlvbi5sYXlvdXQpXCI+XG4gICAgICAgIDxsYWJlbCBjbGFzcz1cImJsb2NrIHRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMFwiPnt7IGZpZWxkLmxhYmVsIH19PC9sYWJlbD5cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgW3R5cGVdPVwiZmllbGQudHlwZVwiXG4gICAgICAgICAgW2Zvcm1Db250cm9sTmFtZV09XCJmaWVsZC5uYW1lXCJcbiAgICAgICAgICBbYXR0ci5wbGFjZWhvbGRlcl09XCJmaWVsZC5sYWJlbFwiXG4gICAgICAgICAgY2xhc3M9XCJ3LWZ1bGwgcHgtNCBweS0yIGJvcmRlciBib3JkZXItZ3JheS0zMDAgcm91bmRlZC1tZCBzaGFkb3ctc20gZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLWluZGlnby01MDAgZm9jdXM6Ym9yZGVyLWluZGlnby01MDBcIlxuICAgICAgICAvPlxuICAgICAgICA8ZGl2ICpuZ0lmPVwiZm9ybS5nZXQoZmllbGQubmFtZSk/LmludmFsaWQgJiYgZm9ybS5nZXQoZmllbGQubmFtZSk/LnRvdWNoZWRcIiBjbGFzcz1cInRleHQtc20gdGV4dC1yZWQtNTAwXCI+XG4gICAgICAgICAgPHNtYWxsICpuZ0lmPVwiZm9ybS5nZXQoZmllbGQubmFtZSk/LmVycm9ycz8uWydyZXF1aXJlZCddXCI+VGhpcyBmaWVsZCBpcyByZXF1aXJlZC48L3NtYWxsPlxuICAgICAgICAgIDxzbWFsbCAqbmdJZj1cImZvcm0uZ2V0KGZpZWxkLm5hbWUpPy5lcnJvcnM/LlsnZW1haWwnXVwiPkludmFsaWQgZW1haWwgYWRkcmVzcy48L3NtYWxsPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCIgW2Rpc2FibGVkXT1cImZvcm0uaW52YWxpZFwiIGNsYXNzPVwicHgtNCBweS0yIGJnLWluZGlnby02MDAgdGV4dC13aGl0ZSByb3VuZGVkLW1kIGhvdmVyOmJnLWluZGlnby03MDAgZGlzYWJsZWQ6b3BhY2l0eS01MFwiPlN1Ym1pdDwvYnV0dG9uPlxuPC9mb3JtPlxuIl19