{"version":3,"file":"my-form-lib.mjs","sources":["../../../projects/my-form-lib/src/lib/my-form-lib.component.ts","../../../projects/my-form-lib/src/lib/form/form.component.ts","../../../projects/my-form-lib/src/lib/form/form.component.html","../../../projects/my-form-lib/src/public-api.ts","../../../projects/my-form-lib/src/my-form-lib.ts"],"sourcesContent":["import {Component, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'lib-my-form-lib',\n  standalone: true,\n  imports: [],\n  template: `\n    <p>\n      my-form-lib works!\n    </p>\n  `,\n  styles: ``,\n})\nexport class MyFormLibComponent {\n\n}\n","import {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\nimport {FormBuilder, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\n\n@Component({\n  selector: 'lib-form',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  templateUrl: './form.component.html',\n  styleUrl: './form.component.css',\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormComponent implements OnInit{\n  @Input() sections:any[] = [];\n\n  form!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.createForm(this.sections);\n  }\n\n  createForm(sections: any[]) {\n    const formControls: any = {};\n    sections.forEach((section) => {\n      section.fields.forEach((field: any) => {\n        const validators = [];\n        if (field.validation.required) validators.push(Validators.required);\n        if (field.validation.email) validators.push(Validators.email);\n        formControls[field.name] = ['', validators];\n      });\n    });\n    this.form = this.fb.group(formControls);\n  }\n\n  getSectionClass(layout: string): string {\n    switch (layout) {\n      case '2x2':\n        return 'grid-2x2';\n      case '2x3':\n        return 'grid-2x3';\n      case '3x3':\n        return 'grid-3x3';\n      default:\n        return '';\n    }\n  }\n\n  getFieldClass(layout: string): string {\n    return layout === '2x2' || layout === '2x3' || layout === '3x3' ? 'field' : '';\n  }\n}\n","<form [formGroup]=\"form\" class=\"p-6 space-y-6\">\n  <div *ngFor=\"let section of sections\" class=\"space-y-4 border-2 rounded-md p-2\">\n    <div class=\"rounded-md pl-2 py-1.5 bg-gray-200\">\n      <h2 class=\"text-lg font-semibold\">{{ section.name }}</h2>\n    </div>\n    <div [ngClass]=\"getSectionClass(section.layout)\" class=\"grid gap-4\">\n      <div *ngFor=\"let field of section.fields\" [ngClass]=\"getFieldClass(section.layout)\">\n        <label class=\"block text-sm font-medium text-gray-700\">{{ field.label }}</label>\n        <input\n          [type]=\"field.type\"\n          [formControlName]=\"field.name\"\n          [attr.placeholder]=\"field.label\"\n          class=\"w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n        />\n        <div *ngIf=\"form.get(field.name)?.invalid && form.get(field.name)?.touched\" class=\"text-sm text-red-500\">\n          <small *ngIf=\"form.get(field.name)?.errors?.['required']\">This field is required.</small>\n          <small *ngIf=\"form.get(field.name)?.errors?.['email']\">Invalid email address.</small>\n        </div>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" [disabled]=\"form.invalid\" class=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 disabled:opacity-50\">Submit</button>\n</form>\n","/*\n * Public API Surface of my-form-lib\n */\n\nexport * from './lib/my-form-lib.component';\nexport * from './lib/form/form.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}